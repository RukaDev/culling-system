"use strict";(self.webpackChunkpixelone=self.webpackChunkpixelone||[]).push([[232],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(n),f=a,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2561:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},l="Configuration",i={unversionedId:"Modes/DejaVu/config",id:"Modes/DejaVu/config",title:"Configuration",description:"Ranges",source:"@site/docs/Modes/DejaVu/config.md",sourceDirName:"Modes/DejaVu",slug:"/Modes/DejaVu/config",permalink:"/cyclone/docs/Modes/DejaVu/config",draft:!1,editUrl:"https://github.com/rukadev/cyclone/docs/Modes/DejaVu/config.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/cyclone/docs/Modes/DejaVu/setup"},next:{title:"Caps",permalink:"/cyclone/docs/Modes/DejaVu/caps"}},c={},u=[{value:"Ranges",id:"ranges",level:2},{value:"<code>OBJECT_RANGES</code>",id:"object_ranges",level:3},{value:"<code>BROAD_RANGE</code>",id:"broad_range",level:3},{value:"<code>FAR_RANGE</code>",id:"far_range",level:3},{value:"<code>MEDIUM_RANGE</code>",id:"medium_range",level:3},{value:"<code>CLOSE_RANGE</code>",id:"close_range",level:3},{value:"<code>REGION_SWITCHING</code>",id:"region_switching",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("h2",{id:"ranges"},"Ranges"),(0,a.kt)("p",null,"Range configs are responsble for adjusting how far a player sees at a point in time."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"The numberical relationship between range values should be as follows: Broad > Far > Medium > Close")),(0,a.kt)("h3",{id:"object_ranges"},(0,a.kt)("inlineCode",{parentName:"h3"},"OBJECT_RANGES")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: table of strings")),(0,a.kt)("p",null,"The ranges (far, med, close) at which different layouts will be culled in."),(0,a.kt)("h3",{id:"broad_range"},(0,a.kt)("inlineCode",{parentName:"h3"},"BROAD_RANGE")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: number")),(0,a.kt)("p",null,"The range at which a template's ground asset will be culled in."),(0,a.kt)("h3",{id:"far_range"},(0,a.kt)("inlineCode",{parentName:"h3"},"FAR_RANGE")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: number")),(0,a.kt)("p",null,"The range at which 'Far' objects are culled within a template."),(0,a.kt)("h3",{id:"medium_range"},(0,a.kt)("inlineCode",{parentName:"h3"},"MEDIUM_RANGE")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: number")),(0,a.kt)("p",null,"The range at which 'Medium' objects are culled within a template."),(0,a.kt)("h3",{id:"close_range"},(0,a.kt)("inlineCode",{parentName:"h3"},"CLOSE_RANGE")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: number")),(0,a.kt)("p",null,"The range at which 'Close' objects are culled within a template."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"region_switching"},(0,a.kt)("inlineCode",{parentName:"h2"},"REGION_SWITCHING")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type: boolean")),(0,a.kt)("p",null,"Whether or not different styled assets are configured."))}p.isMDXComponent=!0}}]);